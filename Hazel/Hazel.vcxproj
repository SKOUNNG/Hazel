<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Dist|x64">
      <Configuration>Dist</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{99294D0D-053E-75BE-CEBF-181E3A9371EF}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Hazel</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-windows-x86_64\Hazel\</OutDir>
    <IntDir>..\bin-int\Debug-windows-x86_64\Hazel\</IntDir>
    <TargetName>Hazel</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-windows-x86_64\Hazel\</OutDir>
    <IntDir>..\bin-int\Release-windows-x86_64\Hazel\</IntDir>
    <TargetName>Hazel</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Dist-windows-x86_64\Hazel\</OutDir>
    <IntDir>..\bin-int\Dist-windows-x86_64\Hazel\</IntDir>
    <TargetName>Hazel</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>hzpch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HZ_PLATFORM_WINDOWS;HZ_BUILD_DLL;HZ_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>vendor\spdlog\include;src;vendor\GLFW\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalOptions>/MDd %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Debug-windows-x86_64\Hazel\Hazel.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST ..\bin\Debug-windows-x86_64\Hazel\Hazel.dll\ (xcopy /Q /E /Y /I ..\bin\Debug-windows-x86_64\Hazel\Hazel.dll ..\bin\Debug-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Debug-windows-x86_64\Hazel\Hazel.dll ..\bin\Debug-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>hzpch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HZ_PLATFORM_WINDOWS;HZ_BUILD_DLL;HZ_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>vendor\spdlog\include;src;vendor\GLFW\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/MD %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Release-windows-x86_64\Hazel\Hazel.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST ..\bin\Release-windows-x86_64\Hazel\Hazel.dll\ (xcopy /Q /E /Y /I ..\bin\Release-windows-x86_64\Hazel\Hazel.dll ..\bin\Release-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Release-windows-x86_64\Hazel\Hazel.dll ..\bin\Release-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>hzpch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>HZ_PLATFORM_WINDOWS;HZ_BUILD_DLL;HZ_DIST;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>vendor\spdlog\include;src;vendor\GLFW\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/MD %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Dist-windows-x86_64\Hazel\Hazel.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST ..\bin\Dist-windows-x86_64\Hazel\Hazel.dll\ (xcopy /Q /E /Y /I ..\bin\Dist-windows-x86_64\Hazel\Hazel.dll ..\bin\Dist-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Dist-windows-x86_64\Hazel\Hazel.dll ..\bin\Dist-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="src\Hazel.h" />
    <ClInclude Include="src\Hazel\Application.h" />
    <ClInclude Include="src\Hazel\Core.h" />
    <ClInclude Include="src\Hazel\EntryPoint.h" />
    <ClInclude Include="src\Hazel\Events\ApplicationEvent.h" />
    <ClInclude Include="src\Hazel\Events\Event.h" />
    <ClInclude Include="src\Hazel\Events\KeyEvent.h" />
    <ClInclude Include="src\Hazel\Events\MouseEvent.h" />
    <ClInclude Include="src\Hazel\Layer.h" />
    <ClInclude Include="src\Hazel\LayerStack.h" />
    <ClInclude Include="src\Hazel\Log.h" />
    <ClInclude Include="src\Hazel\Window.h" />
    <ClInclude Include="src\Platform\Windows\WindowsWindow.h" />
    <ClInclude Include="src\hzpch.h" />
    <ClInclude Include="vendor\GLFW\deps\getopt.h" />
    <ClInclude Include="vendor\GLFW\deps\glad\gl.h" />
    <ClInclude Include="vendor\GLFW\deps\glad\gles2.h" />
    <ClInclude Include="vendor\GLFW\deps\glad\vulkan.h" />
    <ClInclude Include="vendor\GLFW\deps\linmath.h" />
    <ClInclude Include="vendor\GLFW\deps\mingw\dinput.h" />
    <ClInclude Include="vendor\GLFW\deps\mingw\xinput.h" />
    <ClInclude Include="vendor\GLFW\deps\mingw\_mingw_dxhelper.h" />
    <ClInclude Include="vendor\GLFW\deps\nuklear.h" />
    <ClInclude Include="vendor\GLFW\deps\nuklear_glfw_gl2.h" />
    <ClInclude Include="vendor\GLFW\deps\stb_image_write.h" />
    <ClInclude Include="vendor\GLFW\deps\tinycthread.h" />
    <ClInclude Include="vendor\GLFW\deps\vs2008\stdint.h" />
    <ClInclude Include="vendor\GLFW\include\GLFW\glfw3.h" />
    <ClInclude Include="vendor\GLFW\include\GLFW\glfw3native.h" />
    <ClInclude Include="vendor\GLFW\src\cocoa_joystick.h" />
    <ClInclude Include="vendor\GLFW\src\cocoa_platform.h" />
    <ClInclude Include="vendor\GLFW\src\cocoa_time.h" />
    <ClInclude Include="vendor\GLFW\src\internal.h" />
    <ClInclude Include="vendor\GLFW\src\linux_joystick.h" />
    <ClInclude Include="vendor\GLFW\src\mappings.h" />
    <ClInclude Include="vendor\GLFW\src\null_joystick.h" />
    <ClInclude Include="vendor\GLFW\src\null_platform.h" />
    <ClInclude Include="vendor\GLFW\src\platform.h" />
    <ClInclude Include="vendor\GLFW\src\posix_poll.h" />
    <ClInclude Include="vendor\GLFW\src\posix_thread.h" />
    <ClInclude Include="vendor\GLFW\src\posix_time.h" />
    <ClInclude Include="vendor\GLFW\src\win32_joystick.h" />
    <ClInclude Include="vendor\GLFW\src\win32_platform.h" />
    <ClInclude Include="vendor\GLFW\src\win32_thread.h" />
    <ClInclude Include="vendor\GLFW\src\win32_time.h" />
    <ClInclude Include="vendor\GLFW\src\wl_platform.h" />
    <ClInclude Include="vendor\GLFW\src\x11_platform.h" />
    <ClInclude Include="vendor\GLFW\src\xkb_unicode.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\Hazel\Application.cpp" />
    <ClCompile Include="src\Hazel\Layer.cpp" />
    <ClCompile Include="src\Hazel\LayerStack.cpp" />
    <ClCompile Include="src\Hazel\Log.cpp" />
    <ClCompile Include="src\Platform\Windows\WindowsWindow.cpp" />
    <ClCompile Include="src\hzpch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="vendor\GLFW\deps\getopt.c" />
    <ClCompile Include="vendor\GLFW\deps\tinycthread.c" />
    <ClCompile Include="vendor\GLFW\examples\boing.c" />
    <ClCompile Include="vendor\GLFW\examples\gears.c" />
    <ClCompile Include="vendor\GLFW\examples\heightmap.c" />
    <ClCompile Include="vendor\GLFW\examples\offscreen.c" />
    <ClCompile Include="vendor\GLFW\examples\particles.c" />
    <ClCompile Include="vendor\GLFW\examples\sharing.c" />
    <ClCompile Include="vendor\GLFW\examples\splitview.c" />
    <ClCompile Include="vendor\GLFW\examples\triangle-opengl.c" />
    <ClCompile Include="vendor\GLFW\examples\triangle-opengles.c" />
    <ClCompile Include="vendor\GLFW\examples\wave.c" />
    <ClCompile Include="vendor\GLFW\examples\windows.c" />
    <ClCompile Include="vendor\GLFW\src\cocoa_time.c" />
    <ClCompile Include="vendor\GLFW\src\context.c" />
    <ClCompile Include="vendor\GLFW\src\egl_context.c" />
    <ClCompile Include="vendor\GLFW\src\glx_context.c" />
    <ClCompile Include="vendor\GLFW\src\init.c" />
    <ClCompile Include="vendor\GLFW\src\input.c" />
    <ClCompile Include="vendor\GLFW\src\linux_joystick.c" />
    <ClCompile Include="vendor\GLFW\src\monitor.c" />
    <ClCompile Include="vendor\GLFW\src\null_init.c" />
    <ClCompile Include="vendor\GLFW\src\null_joystick.c" />
    <ClCompile Include="vendor\GLFW\src\null_monitor.c" />
    <ClCompile Include="vendor\GLFW\src\null_window.c" />
    <ClCompile Include="vendor\GLFW\src\osmesa_context.c" />
    <ClCompile Include="vendor\GLFW\src\platform.c" />
    <ClCompile Include="vendor\GLFW\src\posix_module.c" />
    <ClCompile Include="vendor\GLFW\src\posix_poll.c" />
    <ClCompile Include="vendor\GLFW\src\posix_thread.c" />
    <ClCompile Include="vendor\GLFW\src\posix_time.c" />
    <ClCompile Include="vendor\GLFW\src\vulkan.c" />
    <ClCompile Include="vendor\GLFW\src\wgl_context.c" />
    <ClCompile Include="vendor\GLFW\src\win32_init.c" />
    <ClCompile Include="vendor\GLFW\src\win32_joystick.c" />
    <ClCompile Include="vendor\GLFW\src\win32_module.c" />
    <ClCompile Include="vendor\GLFW\src\win32_monitor.c" />
    <ClCompile Include="vendor\GLFW\src\win32_thread.c" />
    <ClCompile Include="vendor\GLFW\src\win32_time.c" />
    <ClCompile Include="vendor\GLFW\src\win32_window.c" />
    <ClCompile Include="vendor\GLFW\src\window.c" />
    <ClCompile Include="vendor\GLFW\src\wl_init.c" />
    <ClCompile Include="vendor\GLFW\src\wl_monitor.c" />
    <ClCompile Include="vendor\GLFW\src\wl_window.c" />
    <ClCompile Include="vendor\GLFW\src\x11_init.c" />
    <ClCompile Include="vendor\GLFW\src\x11_monitor.c" />
    <ClCompile Include="vendor\GLFW\src\x11_window.c" />
    <ClCompile Include="vendor\GLFW\src\xkb_unicode.c" />
    <ClCompile Include="vendor\GLFW\tests\allocator.c" />
    <ClCompile Include="vendor\GLFW\tests\clipboard.c" />
    <ClCompile Include="vendor\GLFW\tests\cursor.c" />
    <ClCompile Include="vendor\GLFW\tests\empty.c" />
    <ClCompile Include="vendor\GLFW\tests\events.c" />
    <ClCompile Include="vendor\GLFW\tests\gamma.c" />
    <ClCompile Include="vendor\GLFW\tests\glfwinfo.c" />
    <ClCompile Include="vendor\GLFW\tests\icon.c" />
    <ClCompile Include="vendor\GLFW\tests\iconify.c" />
    <ClCompile Include="vendor\GLFW\tests\inputlag.c" />
    <ClCompile Include="vendor\GLFW\tests\joysticks.c" />
    <ClCompile Include="vendor\GLFW\tests\monitors.c" />
    <ClCompile Include="vendor\GLFW\tests\msaa.c" />
    <ClCompile Include="vendor\GLFW\tests\reopen.c" />
    <ClCompile Include="vendor\GLFW\tests\tearing.c" />
    <ClCompile Include="vendor\GLFW\tests\threads.c" />
    <ClCompile Include="vendor\GLFW\tests\timeout.c" />
    <ClCompile Include="vendor\GLFW\tests\title.c" />
    <ClCompile Include="vendor\GLFW\tests\triangle-vulkan.c" />
    <ClCompile Include="vendor\GLFW\tests\window.c" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="vendor\GLFW\GLFW.vcxproj">
      <Project>{154B857C-0182-860D-AA6E-6C109684020F}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="vendor\GLFW\docs\footer.html" />
    <None Include="vendor\GLFW\docs\header.html" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="vendor\GLFW\examples\glfw.rc" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>